#!/usr/bin/env bash
# This Script Creates a certificate using certbot & configure HAproxy to accept encrypted traffic

sudo snap install --classic certbot
sudo service haproxy stop
sudo certbot certonly --standalone -d www.hebazaki.tech
sudo mkdir -p /etc/haproxy/certs
DOMAIN='www.hebazaki.tech' sudo -E bash -c 'cat /etc/letsencrypt/live/$DOMAIN/fullchain.pem /etc/letsencrypt/live/$DOMAIN/privkey.pem > /etc/haproxy/certs/$DOMAIN.pem'
sudo chmod -R go-rwx /etc/haproxy/certs
#open the file
sudo vim /etc/haproxy/haproxy.cfg
#lines to add 
bind *:443 ssl crt /etc/haproxy/certs/domain.pem
redirect scheme https if !{ ssl_fc }
...
frontend http_front
        bind *:80
        bind *:443 ssl crt /etc/haproxy/certs/www.devniyi.tech.pem
        redirect scheme https code 301 if !{ ssl_fc }
        default_backend http_back
...
sudo haproxy -f /etc/haproxy/haproxy.cfg -c
sudo openssl dhparam -out /etc/haproxy/dhparams.pem 2048
ssl-dh-param-file /etc/haproxy/dhparams.pem
global
        log /dev/log    local0
        log /dev/log    local1 notice
        chroot /var/lib/haproxy
        stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
        stats timeout 30s
        user haproxy
        group haproxy
        daemon

        # Default SSL material locations
        ca-base /etc/ssl/certs
        crt-base /etc/ssl/private

        # See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
        ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
        ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets
        ssl-dh-param-file /etc/haproxy/dhparams.pem

sudo service haproxy restart
